import type { Metadata } from "next";
import { Poppins } from "next/font/google";
import { Footer } from "@/components/ui/Footer";
// import { Header } from "@/components/ui/Header";
import { PHProvider, PostHogPageview } from "@/components/PHProvider";
import { Suspense } from "react";
import { Layout, Navbar } from "nextra-theme-docs";
import { Banner, Head } from "nextra/components";
import { getPageMap } from "nextra/page-map";
import { getPageMap as getTestPageMap } from "./docs/podcast-namespace/[[...mdxPath]]/page";
import { cn } from "@/lib/utils";
import "nextra-theme-docs/style.css";
import "./globals.css";
import { Podcasting20 } from "@/components/icons/Podcasting20";

const poppins = Poppins({
  weight: ["400", "600"],
  subsets: ["latin"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "Podcasting 2.0",
  // description: "Generated by create next app",
};

const banner = (
  <Banner storageKey="markdown-announcement">
    Podcasting2.org&rsquo;s content is now powered by Markdown and open for
    contributions!
  </Banner>
);

const navbar = (
  <Navbar
    logo={
      <>
        <Podcasting20 className="mr-2 size-6" />
        Podcasting 2.0
      </>
    }
    projectLink="https://github.com/thedanieljlewis/podcasting2.org/"

    // ... Your additional navbar options
  />
);
const footer = <Footer />;

// Helper function to filter out podcast-namespace from base page map
function filterPodcastNamespaceFromPageMap(pageMap: any[]): any[] {
  return pageMap.map((item) => {
    if (item.name === "docs" && item.children) {
      return {
        ...item,
        children: item.children.filter(
          (child: any) => child.name !== "podcast-namespace",
        ),
      };
    }
    return item;
  });
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Build pageMap asynchronously
  const [basePageMap, testPageMap] = await Promise.all([
    getPageMap(),
    getTestPageMap(),
  ]);

  // Filter out podcast-namespace from base page map to avoid duplication
  const filteredBasePageMap = filterPodcastNamespaceFromPageMap(basePageMap);
  const pageMap = [...filteredBasePageMap, testPageMap];

  return (
    <html
      // Not required, but good for SEO
      lang="en"
      // Required to be set
      dir="ltr"
      // Suggested by `next-themes` package https://github.com/pacocoursey/next-themes#with-app
      // suppressHydrationWarning
      className={cn(poppins.className, "transition-colors")}
    >
      <Head
        // ... Your additional head options
        color={{
          hue: 0,
          saturation: 100,
          lightness: {
            light: 42,
            dark: 62,
          },
        }}
        // backgroundColor={{
        //   light: "#00ad",
        //   dark: "#f00",
        // }}
      >
        {/* Your additional tags should be passed as `children` of `<Head>` element */}
      </Head>
      <Suspense>
        <PostHogPageview />
      </Suspense>
      <PHProvider>
        <body>
          <Layout
            banner={banner}
            navbar={navbar}
            pageMap={pageMap}
            docsRepositoryBase="https://github.com/thedanieljlewis/podcasting2.org/"
            footer={footer}
            // ... Your additional layout options
          >
            {children}
          </Layout>
        </body>
      </PHProvider>
    </html>
  );
}
